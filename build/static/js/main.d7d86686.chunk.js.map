{"version":3,"sources":["socket.js","components/Buttons.jsx","components/RemoteVideo.jsx","components/RemoteVideoPlaceholder.jsx","components/Chat.jsx","components/Main.jsx","index.jsx"],"names":["io","require","socket","on","err","console","log","getId","id","message","msg","emit","registerChatHandler","onMessageReceived","onTyping","onStopTyping","registerCommonHandler","onConnected","onStrangerDisconnect","registerPeerSignal","onSignal","registerOnlineUsers","onOnline","unRegisterChatHandler","off","unRegisterCommonHandler","unRegisterPeerSignal","startTyping","toId","stopTyping","startSearch","stop","sendSignal","signal","getOnlineUsers","cb","Buttons","className","style","backgroundColor","this","props","searching","connected","onClick","start","disconnected","next","Component","RemoteVideo","state","stream","peer","bindProps","onStream","bind","remoteVideo","React","createRef","Peer","initiator","client","destroy","data","setState","current","srcObject","src","window","URL","createObjectURL","height","width","display","alignItems","justifyContent","textAlign","color","ref","autoPlay","role","aria-label","RemoteVideoPlaceholder","usersCount","renderPlaceholder","Chatroom","messages","input","typing","onInput","onSendMessage","scrollChatToBottom","chat","document","getElementById","offsetHeight","user","e","value","target","setTimeout","preventDefault","panel","scrollTo","scrollHeight","i","sender","key","map","renderMessage","type","onChange","onKeyPress","onEnterDown","Main","localVideo","getStream","gotMedia","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","video","audio","then","catch","muted","toogleStart","clickNext","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.d7d86686.chunk.js","sourcesContent":["const io = require('socket.io-client');\n\nexport default function() {\n  // const socket = io.connect('http://localhost:3000');\n  const socket = io();\n\n  socket.on('error', err => console.log('socket error:', err));\n\n  function getId() {\n    return socket.id;\n  }\n\n  function registerChatHandler(onMessageReceived, onTyping, onStopTyping) {\n    socket.on('message', onMessageReceived);\n    socket.on('typing', onTyping);\n    socket.on('stop typing', onStopTyping);\n  }\n\n  function registerCommonHandler(onConnected, onStrangerDisconnect) {\n    socket.on('connected', onConnected);\n    socket.on('stranger disconnected', onStrangerDisconnect);\n  }\n\n  function registerPeerSignal(onSignal) {\n    socket.on('signal', onSignal);\n  }\n\n  function registerOnlineUsers(onOnline) {\n    socket.on('online', onOnline);\n  }\n\n  function unRegisterChatHandler() {\n    socket.off('message');\n    socket.off('typing');\n    socket.off('stop typing');\n  }\n\n  function unRegisterCommonHandler() {\n    socket.off('connected');\n    socket.off('stranger disconnected');\n  }\n\n  function unRegisterPeerSignal(onSignal) {\n    socket.off('signal', onSignal);\n  }\n\n  function message(msg) {\n    socket.emit('message', msg);\n  }\n\n  function startTyping(toId) {\n    socket.emit('typing', toId);\n  }\n\n  function stopTyping(toId) {\n    socket.emit('stop typing', toId);\n  }\n\n  function startSearch(toId) {\n    socket.emit('searching', toId);\n  }\n\n  function stop(toId) {\n    socket.emit('stop', toId);\n  }\n\n  function sendSignal(signal) {\n    socket.emit('signal', signal);\n  }\n  function getOnlineUsers(cb) {\n    socket.emit('online', cb);\n  }\n\n  return {\n    getId,\n    message,\n    registerChatHandler,\n    registerCommonHandler,\n    registerPeerSignal,\n    registerOnlineUsers,\n    unRegisterChatHandler,\n    unRegisterCommonHandler,\n    unRegisterPeerSignal,\n    startTyping,\n    stopTyping,\n    startSearch,\n    stop,\n    sendSignal,\n    getOnlineUsers\n  };\n}\n","import React, { Component } from 'react';\nimport Next from '@material-ui/icons/SkipNext';\n\nimport './../css/Buttons.css';\n\nexport default class Buttons extends Component {\n  render() {\n    return (\n      <div className=\"left\">\n        <div className=\"buttons\">\n          <button\n            className=\"start\"\n            style={{ backgroundColor: this.props.searching || this.props.connected ? '#fd4545' : '#51fd6d' }}\n            onClick={this.props.start}\n          >\n            {this.props.searching || this.props.connected ? 'Stop' : 'Start'}\n          </button>\n          {(this.props.connected || this.props.disconnected) && (\n            <button className=\"next\" onClick={this.props.next}>\n              <Next />\n            </button>\n          )}\n        </div>\n        <span>\n          connected:\n          <div className=\"circle\" style={{ backgroundColor: this.props.connected ? '#51fd6d' : '#fd4545' }}></div>\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Peer from 'simple-peer';\n\nexport default class RemoteVideo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { stream: false };\n\n    this.peer = null;\n    this.bindProps = () => {\n      this.peer.on('signal', this.onSignal);\n      this.peer.on('stream', this.onStream);\n    };\n    this.onSignal = this.onSignal.bind(this);\n    this.onStream = this.onStream.bind(this);\n\n    this.remoteVideo = React.createRef();\n  }\n\n  componentDidMount() {\n    this.peer = new Peer({ initiator: this.props.initiator, stream: this.props.stream });\n    this.bindProps();\n    const peer = this.peer;\n    this.props.client.registerPeerSignal(signal => {\n      peer.signal(signal);\n    });\n  }\n\n  sendSignal(signal) {\n    this.peer.signal(signal);\n  }\n\n  componentWillUnmount() {\n    this.props.client.unRegisterPeerSignal();\n    this.peer.destroy();\n  }\n\n  onSignal(data) {\n    this.props.client.sendSignal({ toId: this.props.toId, signal: data });\n  }\n\n  onStream(stream) {\n    this.setState({ stream: true });\n    if ('srcObject' in this.remoteVideo.current) {\n      this.remoteVideo.current.srcObject = stream;\n    } else {\n      this.remoteVideo.current.src = window.URL.createObjectURL(stream);\n    }\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          textAlign: 'center',\n          color: '#fafafa'\n        }}\n      >\n        {this.state.stream ? (\n          <video ref={this.remoteVideo} height=\"100%\" autoPlay></video>\n        ) : (\n          <h1>\n            You are connected but stranger don't want you to see him{' '}\n            <span role=\"img\" aria-label=\"surprised\">\n              &#128546;\n            </span>\n          </h1>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Loop from '@material-ui/icons/Loop';\n\nexport default class RemoteVideoPlaceholder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { usersCount: 0 };\n\n    this.getOnlineUsers = this.getOnlineUsers.bind(this);\n  }\n  componentDidMount() {\n    this.props.getOnlineUsers(this.getOnlineUsers);\n    this.props.registerOnlineUsers(this.getOnlineUsers);\n  }\n\n  getOnlineUsers(usersCount) {\n    this.setState({ usersCount });\n  }\n\n  renderPlaceholder() {\n    if (this.props.searching && !this.props.disconnected) {\n      return (\n        <div>\n          <h1>\n            searching...{' '}\n            <span role=\"img\" aria-label=\"thinking\">\n              &#129300;\n            </span>{' '}\n          </h1>\n          <Loop className=\"rotating\" style={{ width: '50px', height: '50px' }} />\n        </div>\n      );\n    }\n\n    if (this.props.searching && this.props.disconnected) {\n      return (\n        <div>\n          <h1>\n            Stranger disconnected{' '}\n            <span role=\"img\" aria-label=\"surprised\">\n              &#128550;\n            </span>\n          </h1>\n          <h3>\n            Click 'next' for continue!{' '}\n            <span role=\"img\" aria-label=\"badboy\">\n              &#128526;\n            </span>\n          </h3>\n        </div>\n      );\n    }\n\n    if (!this.props.searching) {\n      return (\n        <div>\n          <h1>\n            Welcome to VideoChat Roulette!{' '}\n            <span role=\"img\" aria-label=\"tongue\">\n              &#128539;\n            </span>\n          </h1>\n          <h3>online users: {this.state.usersCount}</h3>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <div style={{ textAlign: 'center', color: '#fafafa' }}>{this.renderPlaceholder()}</div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Send from '@material-ui/icons/Send';\n\nimport './../css/Chat.css';\n\nexport default class Chatroom extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      messages: [],\n      input: '',\n      client: this.props.client,\n      typing: false,\n      toId: '',\n      initiator: null\n    };\n\n    this.onInput = this.onInput.bind(this);\n    this.onSendMessage = this.onSendMessage.bind(this);\n    this.onMessageReceived = this.onMessageReceived.bind(this);\n    this.onTyping = this.onTyping.bind(this);\n    this.onStopTyping = this.onStopTyping.bind(this);\n    this.onConnected = this.onConnected.bind(this);\n    this.onStrangerDisconnect = this.onStrangerDisconnect.bind(this);\n\n    // this.updateChatHistory = this.updateChatHistory.bind(this);\n    this.scrollChatToBottom = this.scrollChatToBottom.bind(this);\n  }\n\n  componentDidMount() {\n    this.state.client.registerChatHandler(this.onMessageReceived, this.onTyping, this.onStopTyping);\n    this.state.client.registerCommonHandler(this.onConnected, this.onStrangerDisconnect);\n    const chat = document.getElementById('chat');\n    chat.style.height = `${chat.offsetHeight}px`;\n  }\n\n  componentWillUnmount() {\n    this.state.client.unRegisterCommonHandler();\n    this.state.client.unRegisterChatHandler();\n  }\n\n  componentDidUpdate() {\n    this.scrollChatToBottom();\n  }\n\n  onMessageReceived(msg) {\n    this.setState({ messages: [...this.state.messages, msg] });\n  }\n\n  onTyping(user) {\n    if (!this.state.typing) {\n      this.setState({ typing: user });\n    }\n  }\n\n  onStopTyping() {\n    if (this.state.typing) {\n      this.setState({ typing: false });\n    }\n  }\n\n  onConnected({ toId, initiator }) {\n    this.setState({ toId, initiator });\n  }\n\n  onStrangerDisconnect() {\n    this.setState({ toId: '', messages: [], input: '' });\n  }\n\n  onInput(e) {\n    if (!this.state.typing) {\n      this.state.client.startTyping(this.state.toId);\n    }\n    const value = e.target.value;\n    setTimeout(() => {\n      if (value === this.state.input) {\n        this.state.client.stopTyping(this.state.toId);\n      }\n    }, 700);\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  onSendMessage() {\n    if (!this.state.input || !this.state.toId) return;\n    this.state.client.message({ id: this.state.toId, msg: this.state.input });\n    this.setState({ input: '' });\n    this.state.client.stopTyping(this.state.toId);\n  }\n\n  onEnterDown(e) {\n    e.preventDefault();\n    this.onSendMessage();\n  }\n\n  scrollChatToBottom() {\n    this.panel.scrollTo(0, this.panel.scrollHeight);\n  }\n\n  renderMessage(msg, i) {\n    const user = msg.sender === this.state.client.getId() ? 'You' : 'Stranger';\n    if (user === 'You') {\n      return (\n        <li key={i} className=\"message-wrap right\">\n          <div className=\"message-text\">{msg.msg}</div>\n          <div className=\"message-sender\">{user}</div>\n        </li>\n      );\n    } else {\n      return (\n        <li key={i} className=\"message-wrap\">\n          <div className=\"message-sender\">{user}</div>\n          <div className=\"message-text\">{msg.msg}</div>\n        </li>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"chat\" className=\"chat\">\n        <div\n          className=\"messages\"\n          ref={panel => {\n            this.panel = panel;\n          }}\n        >\n          <ul>\n            {this.state.messages.map((msg, i) => this.renderMessage(msg, i))}\n            <li key={-1}>\n              <div\n                className={`typing ${\n                  this.state.typing && this.state.typing !== this.state.client.getId() ? '' : 'hide'\n                }`}\n              >\n                <span>Stranger is typing</span>\n                <div className=\"is-typing\">\n                  <div className=\"o1\"></div>\n                  <div className=\"o2\"></div>\n                  <div className=\"o3\"></div>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div className=\"input\">\n          <input\n            type=\"text\"\n            onChange={this.onInput}\n            value={this.state.input}\n            onKeyPress={e => (e.key === 'Enter' ? this.onEnterDown(e) : null)}\n          />\n          <button onClick={() => this.onSendMessage()}>\n            <Send />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Buttons from './Buttons';\nimport RemoteVideo from './RemoteVideo';\nimport RemoteVideoPlaceholder from './RemoteVideoPlaceholder';\nimport Chat from './Chat';\n\nimport './../css/Main.css';\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      client: this.props.client,\n      start: false,\n      toId: '',\n      initiator: null,\n      disconnected: false,\n      localVideo: null\n    };\n\n    this.onConnected = this.onConnected.bind(this);\n    this.onStrangerDisconnect = this.onStrangerDisconnect.bind(this);\n\n    this.stream = null;\n    this.localVideo = React.createRef();\n  }\n\n  componentDidMount() {\n    this.state.client.registerCommonHandler(this.onConnected, this.onStrangerDisconnect);\n    this.getStream();\n  }\n\n  componentDidUpdate() {}\n\n  componentWillUnmount() {\n    this.state.client.unRegisterCommonHandler();\n  }\n\n  onConnected({ toId, initiator }) {\n    this.setState({ toId, initiator });\n  }\n\n  onStrangerDisconnect() {\n    this.setState({ toId: '', initiator: null });\n    if (this.state.start) {\n      this.setState({ disconnected: true });\n    }\n  }\n\n  clickNext() {\n    this.setState({ disconnected: false });\n    this.state.client.startSearch(this.state.toId);\n  }\n\n  toogleStart() {\n    if (this.state.start) {\n      this.state.client.stop(this.state.toId);\n      this.setState({ start: false, toId: '', initiator: null, disconnected: false });\n    } else {\n      this.state.client.startSearch();\n      this.setState({ start: true });\n    }\n  }\n\n  getStream() {\n    const gotMedia = stream => {\n      this.setState({ localVideo: true });\n      this.stream = stream;\n      if ('srcObject' in this.localVideo.current) {\n        this.localVideo.current.srcObject = this.stream;\n      } else {\n        this.localVideo.current.src = window.URL.createObjectURL(this.stream);\n      }\n    };\n\n    navigator.getUserMedia =\n      navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\n    if (typeof navigator.mediaDevices.getUserMedia === 'undefined') {\n      navigator.getUserMedia({ video: true, audio: true }, gotMedia, () => this.setState({ localVideo: false }));\n    } else {\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: true })\n        .then(gotMedia)\n        .catch(() => this.setState({ localVideo: false }));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <div className=\"video-area\">\n          <div className=\"video remote\">\n            {this.state.toId ? (\n              <RemoteVideo\n                client={this.state.client}\n                toId={this.state.toId}\n                initiator={this.state.initiator}\n                stream={this.stream}\n              />\n            ) : (\n              <RemoteVideoPlaceholder\n                registerOnlineUsers={this.state.client.registerOnlineUsers}\n                getOnlineUsers={this.state.client.getOnlineUsers}\n                searching={!this.state.toId && this.state.start}\n                disconnected={this.state.disconnected}\n              />\n            )}\n          </div>\n          <div id=\"local\" className=\"video local\">\n            <div\n              style={{\n                height: '100%',\n                width: '100%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                textAlign: 'center',\n                color: '#fafafa'\n              }}\n            >\n              {this.state.localVideo ? (\n                <video ref={this.localVideo} autoPlay muted={true}></video>\n              ) : (\n                <div>\n                  <h1>\n                    we can't get your camera{' '}\n                    <span role=\"img\" aria-label=\"surprised\">\n                      &#128546;\n                    </span>\n                  </h1>\n                  <h3>\n                    but you still can use this app{' '}\n                    <span role=\"img\" aria-label=\"surprised\">\n                      &#128527;\n                    </span>\n                  </h3>\n                  <h3>or try again to give us access to your camera</h3>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"bottom-area\">\n          <Buttons\n            searching={!this.state.toId && this.state.start}\n            connected={this.state.toId ? true : false}\n            disconnected={this.state.disconnected}\n            start={() => this.toogleStart()}\n            next={() => this.clickNext()}\n          />\n          <Chat client={this.state.client} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport socket from './socket';\nimport Main from './components/Main';\nimport './css/index.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = { client: socket() };\n  }\n\n  render() {\n    return (\n      <div className=\"root\">\n        <Main client={this.state.client} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}